RFECammonPanels ^{
    Help ^{
        ButRecharge=Зарядка ракеты/торпеды (<color=255,245,80>U</color>) - COST cr.
    }
    MissilesToRearm ^{
        1=10
        2=10
        3=28
        4=46
        5=64
        6=82
        7=100
        8=100
    }
}
Mods ^{
    RFECammonPanels ^{
        Buttons ^{
            help=сюда кидать папки с кнопками которые хотите подключить. в папке должен быть параметр ButtonName который включит эту кнопку на панели. например, папка VasyankaMod в которой параметр ButtonName=VasyankaMod_Button будет включать кнопку VasyankaMod_Button на кастомной форме RFECammonPanels. сама кнопка прописывается в main вашего мода: ML.RFECammonPanels.Panel.Panel.VasyankaMod.GraphButton. форму, которую будет открывать эта кнопка, можно прописывать в ML.RFECammonPanels.Panel.VasyankaModPanel или там где вам удобнее(можно открывать другую кастомную форму этой кнопкой, если надо). Active у этой формы изначально должен быть False, чтобы всё сразу не включалось. в OnPressCode VasyankaMod_Button включать эту форму так: CustomInterfaceState('VasyankaModPanel',1);. но также надо выключать общую панель для всех кнопок: CustomInterfaceState('CammonPanelButtons',0);. если не хотите чтобы кнопка была видна до определенного момента(например переменная из вон того скрипта !=1) можно выключать её в общем ML.RFECammonPanels.CodeAfterRun.VasyankaMod добавлением параметра CustomInterfaceState('VasyankaMod_Button',0);. в CodeAfterRun перебираются все кнопки из параметров ланга, проверяется их стейт(CustomInterfaceState) и включаются если не 0. не стоит создавать папки в CodeAfterRun с именами ниже чем zzzzzzzzzz*(по дабосортировке), тогда общий код RFECammonPanels не подхватит стейт вашей кнопки из-за того что он идёт после кода RFECammonPanels. пример добавления кнопок есть в модах AMod_CamoHull, Mod_Merchant.
        }
        RandomImage ^{
            RFECammonPanels=RFECammonPanels_1
            RFECammonPanels=RFECammonPanels_2
            RFECammonPanels=RFECammonPanels_3
            RFECammonPanels=RFECammonPanels_4
        }
        RandomImageCode ^{
            01=CustomInterfaceState('RandomImage', -1);
            02=unknown random_image_array; int random_image_count = CT('Mods.RFECammonPanels.RandomImage', random_image_array) - 1;
            03=str random_image = 'RandomImage.' + random_image_array[Rnd(0, random_image_count)];
            04=if(ResourceExist(random_image))
            05 ^{
                01=CustomInterfaceImage('RandomImage', 'GI,' + random_image);
                02=CustomInterfaceState('RandomImage', 1);
            }
            06=int switcher_RandomImagePanel = UICheckElement('StarMap', 'StarMap_RFECammonPanelsButton_Label', 'Text');
            07=if(switcher_RandomImagePanel == 1)CustomInterfaceState('RandomImagePanel', 1);
            08=else CustomInterfaceState('RandomImagePanelShow', 1);
        }
    }
}

ShipInfo ^{
    AddInfo ^{
        CustomInfos ^{
            RFECammonPanels_OnHangarOpenedInfo ^{
                Icon=0
                Name=OnHangarOpenedCallback
                Description=NoShow

				OnActCodeTypes=t_OnEnteringForm, t_OnLeavingForm
				OnActCode ^{
					01=if(CurrentForm() == 'Hangar')
                    02 ^{
                        01=InterfaceImage('Hangar', 'ChargeAnim', 'Style:Style.FormHangar2.ChargeAnim');
                        02=UICheckElement('Hangar', 'ChargeAnim', 'CurFrame', 0);
                        03=InterfaceState('Hangar', 'ChargeAnim', 0);
                        04=int i = 1;
                        05=int status = 0;
                        06=dword currentWeapon = 0;
                        07=for(i = 1; i <= 5; i = i + 1)
                        08 ^{
                            01=currentWeapon = ShipWeapon(Player(), i);
                            02=if(currentWeapon)
                            03 ^{
                                01=if(MissilesToRearm(currentWeapon))
                                02 ^{
                                    01=status = 1;
                                }
                            }
                        }
                        09=if(status)
                        10 ^{
                            01=int missilesToRearm = 0;
                            02=int moneyToRecharge = 0;
                            03=for(i = 1;i <= 5; i = i + 1)
                            04 ^{
                                01=currentWeapon = ShipWeapon(Player(), i);
                                02=if(currentWeapon)
                                03 ^{
                                    01=missilesToRearm = MissilesToRearm(currentWeapon);
                                    02=if(missilesToRearm)
                                    03 ^{
                                        01=moneyToRecharge = moneyToRecharge + (int(CT('RFECammonPanels.MissilesToRearm.'+GalaxyTechLevel())) * missilesToRearm);
                                    }
                                }
                            }
                            05=UICheckElement('Hangar', 'ButRecharge', 'Help', Format(CT('RFECammonPanels.Help.ButRecharge'), 'COST', moneyToRecharge));
                            06=InterfaceState('Hangar', 'ButRecharge', 3);
                        }
                        11=else
                        12 ^{
                            01=InterfaceState('Hangar', 'ButRecharge', 2);
                        }
                    }
				}
            }
        }
    }
}